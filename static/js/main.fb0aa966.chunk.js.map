{"version":3,"sources":["assets/images/logo.svg","components/Posts/Posts.module.css","assets/images/preloader.svg","components/common/ModalWindow.module.css","components/Nav/Nav.module.css","components/Header/Header.jsx","components/Nav/Nav.jsx","api/api.js","redux/reducers/posts-reducer.js","redux/reducers/editPost-reducer.js","redux/reducers/comments-reducer.js","redux/selectors/posts-selectors.js","components/common/Preloader.jsx","components/common/modalWindow.jsx","components/Posts/PostDelete/PostDelete.jsx","components/Comments/Comment.jsx","components/Comments/Comments.jsx","components/Posts/Post.jsx","components/Posts/Posts.jsx","components/common/Paginator.jsx","components/Posts/PostAdd/PostsForm.jsx","components/Posts/PostsContainer.jsx","components/Posts/PostEdit/PostEditForm.jsx","components/Posts/PostEdit/PostEditContainer.jsx","redux/reducers/users-reducer.js","redux/selectors/users-selectors.js","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/Users/Users.module.css","components/Comments/Comments.module.css","components/Posts/PostEdit/PostEditForm.module.css","components/Posts/PostAdd/PostsForm.module.css","assets/images/user.png","components/Header/Header.module.css","components/common/Preloader.module.css","components/common/Paginator.module.css"],"names":["module","exports","Header","props","className","style","header","logo","src","alt","Nav","nav","list","item","to","activeClassName","activeLink","instance","axios","baseURL","headers","usersAPI","get","then","response","data","postsAPI","currentPage","pageSize","title","body","userId","post","postId","editTitle","editBody","put","id","delete","commentsAPI","initialState","posts","totalPostsCount","isFetching","isConfirmed","postsReducer","state","action","type","payload","pageNumber","count","addPost","setCurrentPage","toggleIsFetching","getPostsThunk","dispatch","a","isUpdated","editPostReducer","setEditPost","toggleUpdatingProgress","comments","isCommentsShowing","commentsReducer","getPosts","createSelector","filter","u","getPageSize","getTotalPostsCount","getCurrentPage","getIsFetching","Preloader","preloader","preloader__img","Modal","setAppElement","ModalWindow","isOpen","modalIsOpen","modalText","btns","onClick","setModalIsOk","setModalIsOpen","PostDelete","useState","modalIsOk","useEffect","deletePostThunk","console","log","Comment","comment","styles","blocks","block1","block2","email","connect","getCommentsThunk","showComments","map","key","Post","setShowComments","userimg","userImg","editBtn","deleteBtn","deletePost","Posts","toggleCommentsShowing","Paginator","totalCount","paginate","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","selectedPage","e","PostsReduxForm","reduxForm","form","formBlock","onSubmit","handleSubmit","newPostTitle","Field","component","name","placeholder","newPostBody","newPostButton","addPostThunk","newTitle","newBody","container","formData","postTitle","postBody","PostEditReduxForm","editFormBlock","compose","editPost","initialValues","postEditTitle","postEditBody","getEditPost","updateEditPost","withRouter","match","params","history","value","users","totalUsersCount","usersReducer","getUsers","getTotalUsersCount","Users","React","memo","user","username","getUsersThunk","indexOfLastUser","indexOfFirstUser","currentUsers","slice","path","render","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb0aa966.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee61ca49.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Posts_container__2eWO6\",\"post\":\"Posts_post__xL0Lx\",\"blocks\":\"Posts_blocks__8_v6Q\",\"block1\":\"Posts_block1__mrsiS\",\"userimg\":\"Posts_userimg__2RNTK\",\"block2\":\"Posts_block2__3a3G4\",\"title\":\"Posts_title__hpLe3\",\"editBtn\":\"Posts_editBtn__1ijR4\",\"deleteBtn\":\"Posts_deleteBtn__2b7he\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.e090b2b4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ModalWindow_Modal__2ES7F\",\"Overlay\":\"ModalWindow_Overlay__kvp0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3SNcg\",\"item\":\"Nav_item__p3Pdi\",\"activeLink\":\"Nav_activeLink__35Cwx\"};","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={style.header}>\r\n      <div className={style.logo}>\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport style from \"./Nav.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = (props) => {\r\n  return (\r\n    <nav className={style.nav}>\r\n      <ul className={style.list}>\r\n        <li className={style.item}>\r\n          <NavLink to=\"/posts\" activeClassName={style.activeLink}>\r\n            Posts\r\n          </NavLink>\r\n        </li>\r\n        <li className={style.item}>\r\n          <NavLink to=\"/users\" activeClassName={style.activeLink}>\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:3000/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json; charset=UTF-8\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers() {\r\n    return instance.get(`users`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n\r\nexport const postsAPI = {\r\n  getPosts(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`posts?_page=${currentPage}&_limit=${pageSize}`)\r\n  },\r\n\r\n  addPosts(title, body, userId=1) {\r\n    return instance.post(`posts`, \r\n    { title, body, userId}).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getPost(postId) {\r\n    return instance.get(`posts/${postId}`).then ((response) => {\r\n      return response.data})\r\n  },\r\n\r\n  updatePost(postId, userId, editTitle, editBody) {\r\n    return instance.put(`posts/${postId}`, {\r\n      id: postId, userId: userId, title: editTitle, body: editBody\r\n    }).then ((response) => {\r\n      return response.data})\r\n  }, \r\n\r\n  deletePost(postId) {\r\n    return instance.delete(`posts/${postId}`)\r\n  } \r\n\r\n};\r\n\r\nexport const commentsAPI = {\r\n  getComments(postId) {\r\n    return instance.get(`comments?postId=${postId}`)},\r\n};\r\n","import { postsAPI } from \"./../../api/api\";\r\n\r\nconst SET_POSTS = \"SET_POSTS\";\r\nconst SET_PAGE = \"SET_PAGE\";\r\nconst SET_TOTAL_POSTS = \"SET_TOTAL_POSTS\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst CONFIRM_POST_DELETING = \"CONFIRM_POST_DELETING\";\r\n\r\n\r\nlet initialState = {\r\n  posts: [],\r\n  pageSize: 3,\r\n  totalPostsCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  isConfirmed: false\r\n};\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n\r\n    case SET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.posts,\r\n      };\r\n\r\n    case SET_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.pageNumber,\r\n      };\r\n\r\n    case SET_TOTAL_POSTS:\r\n      return {\r\n        ...state,\r\n        totalPostsCount: action.count,\r\n      };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n\r\n    case CONFIRM_POST_DELETING:\r\n      return {\r\n        ...state,\r\n        isConfirmed: action.isConfirmed,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n\r\n//action creators\r\nexport const setPosts = (posts) => {\r\n  return {\r\n    type: SET_POSTS,\r\n    posts,\r\n  };\r\n};\r\n\r\nexport const addPost = (userId, id, title, body) => {\r\n  return {\r\n    type: ADD_POST,\r\n    payload: {\r\n      userId,\r\n      id,\r\n      title,\r\n      body,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setCurrentPage = (pageNumber) => {\r\n  return {\r\n    type: SET_PAGE,\r\n    pageNumber,\r\n  };\r\n};\r\n\r\nexport const setTotalPostsCount = (count) => {\r\n  return {\r\n    type: SET_TOTAL_POSTS,\r\n    count,\r\n  };\r\n};\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const confirmPostDeleting = (isConfirmed) => {\r\n  return {\r\n    type: CONFIRM_POST_DELETING,\r\n    isConfirmed,\r\n  };\r\n};\r\n\r\n//ThunkCreators\r\nexport const getPostsThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(pageNumber));\r\n\r\n  const response = await postsAPI.getPosts(pageNumber, pageSize);\r\n  dispatch(setPosts(response.data));\r\n  dispatch(setTotalPostsCount(response.headers[\"x-total-count\"]));\r\n  dispatch(toggleIsFetching(false));\r\n};\r\n\r\nexport const addPostThunk = (newTitle, newBody, pageNumber, pageSize, userId) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n\r\n  const data = await postsAPI.addPosts(newTitle, newBody, userId);\r\n  dispatch(addPost(data.userId, data.id, newTitle, newBody));\r\n  dispatch(getPostsThunk(pageNumber, pageSize));\r\n  dispatch(toggleIsFetching(false));\r\n};\r\n\r\nexport const deletePostThunk = (postId, pageNumber, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  const response = await postsAPI.deletePost(postId);\r\n  console.log(response);\r\n  dispatch(getPostsThunk(pageNumber, pageSize));\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(confirmPostDeleting(false));\r\n};\r\n","import {\r\n\tpostsAPI\r\n} from '../../api/api';\r\n\r\nconst SET_EDIT_POST = 'SET_EDIT_POST';\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_UPDATING_PROGRESS = \"TOGGLE_UPDATING_PROGRESS\";\r\n\r\n\r\nlet initialState = {\r\n        id: null, \r\n        userId: null, \r\n        title: \"\", \r\n        body: \"\", \r\n\t\tisFetching: false,\r\n        isUpdated: false\r\n\r\n};\r\n\r\nconst editPostReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase (SET_EDIT_POST):\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n                ...action.payload\r\n\t\t\t};\r\n\t\tcase TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        case TOGGLE_UPDATING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isUpdated: action.isUpdated,\r\n            };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default editPostReducer;\r\n\r\n\r\n//action creators\r\nexport const setEditPost = (id, userId, title, body) => {\r\n\treturn {\r\n\t\ttype: SET_EDIT_POST,\r\n\t\tpayload: {id, userId, title, body}\r\n\t};\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleUpdatingProgress = (isUpdated) => {\r\n    return {\r\n        type: TOGGLE_UPDATING_PROGRESS,\r\n        isUpdated\r\n    }\r\n}\r\n\r\n//thunk creators\r\nexport const getEditPost = (postId) => async(dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await postsAPI.getPost(postId);\r\n    dispatch(setEditPost( data.id, data.userId, data.title, data.body));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const updateEditPost = (postId, userId, editTitle, editBody) => async(dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n\tconst data = await postsAPI.updatePost(postId, userId, editTitle, editBody); \r\n\tdispatch(setEditPost(data.id, data.userId, data.title, data.body));\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(toggleUpdatingProgress(true));\r\n\r\n}\r\n\r\n","import { commentsAPI } from \"./../../api/api\";\r\n\r\nconst SET_COMMENTS = \"SET_COMMENTS\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_COMMENT_SHOWING = \"TOGGLE_COMMENT_SHOWING\";\r\n\r\nlet initialState = {\r\n  comments: [],\r\n  isFetching: false,\r\n  isCommentsShowing: false\r\n};\r\n\r\nconst commentsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n   \r\n    case SET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.comments,\r\n      };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n\r\n    case TOGGLE_COMMENT_SHOWING:\r\n      return {\r\n        ...state,\r\n        isCommentsShowing: action.isCommentsShowing,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default commentsReducer;\r\n\r\n//action creators\r\nexport const setComments = (comments) => {\r\n  return {\r\n    type: SET_COMMENTS,\r\n    comments,\r\n  };\r\n};\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const toggleCommentsShowing = (isCommentsShowing) => {\r\n  return {\r\n    type: TOGGLE_COMMENT_SHOWING,\r\n    isCommentsShowing,\r\n  };\r\n};\r\n\r\n//ThunkCreators\r\nexport const getCommentsThunk = (postId) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  const response = await commentsAPI.getComments(postId);\r\n  dispatch(setComments(response.data));\r\n  dispatch(toggleIsFetching(false));\r\n};\r\n\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getPostsSelector = (state) => {\r\n  return state.posts.posts;\r\n};\r\n\r\nexport const getPosts = createSelector(getPostsSelector, (posts) => {\r\n  return posts.filter((u) => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.posts.pageSize;\r\n};\r\n\r\nexport const getTotalPostsCount = (state) => {\r\n  return state.posts.totalPostsCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.posts.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.posts.isFetching;\r\n};\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../assets/images/preloader.svg\";\r\nimport style from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={style.preloader}>\r\n      <div className={style.preloader__img}>\r\n        <img src={preloader} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport style from \"./ModalWindow.module.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ModalWindow = (props) => {\r\n  const modalIsOk = () => {\r\n    props.setModalIsOk(true);\r\n    props.setModalIsOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal isOpen={props.modalIsOpen}>\r\n        <h3>{props.modalText}</h3>\r\n        <div className={style.btns}>\r\n          <button onClick={modalIsOk}>OK</button>\r\n          <button\r\n            onClick={() => {\r\n              props.setModalIsOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ModalWindow from \"../../common/modalWindow\";\r\n\r\nlet PostDelete = (props) => {\r\n  const [modalIsOk, setModalIsOk] = useState(false);\r\n  const modalText = \"are you sure, that you want to delete this post?\";\r\n  useEffect(() => {\r\n    if (modalIsOk === true) {\r\n      props.deletePostThunk(props.postId, props.currentPage, props.pageSize);\r\n      console.log(\"deletePost\");\r\n    }\r\n  });\r\n  return (\r\n    <div>\r\n      <ModalWindow\r\n        modalText={modalText}\r\n        modalIsOpen={props.modalIsOpen}\r\n        setModalIsOpen={props.setModalIsOpen}\r\n        modalIsOk={modalIsOk}\r\n        setModalIsOk={setModalIsOk}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default PostDelete;\r\n","import React from \"react\";\r\nimport styles from \"./Comments.module.css\";\r\n// import userImg from \"../../assets/images/user.png\";\r\n\r\nlet Comment = ({ comment }) => {\r\n  return (\r\n    <div className={styles.blocks}>\r\n      <div className={styles.block1}>\r\n        {/* <div className={styles.userimg}>\r\n          <img src={userImg} alt=\"img\" />\r\n        </div> */}\r\n      </div>\r\n      <div className={styles.block2}>\r\n        <div>\r\n          <div>\r\n            <span className={styles.title}>\r\n              {comment.id}. {comment.email}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <p className={styles.body}>\r\n              {comment.body != null ? comment.body : \"without text\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Comment;\r\n","import React, { useEffect } from \"react\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport Comment from \"./Comment\";\r\nimport { getCommentsThunk } from \"./../../redux/reducers/comments-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet Comments = (props) => {\r\n  useEffect(() => {\r\n    if (props.showComments === true) {\r\n      props.getCommentsThunk(props.postId);\r\n    }\r\n  }, [props]);\r\n\r\n  if (props.isFetching) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      {props.comments.map(\r\n        (comment) =>\r\n          props.postId === comment.postId && (\r\n            <Comment key={comment.id} comment={comment} />\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.comments.comments,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCommentsThunk,\r\n})(Comments);\r\n\r\n// export default Comments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Posts.module.css\";\r\nimport userImg from \"../../assets/images/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Comments from \"../Comments/Comments\";\r\n\r\nlet Post = (props) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const showCommentClick = () => {\r\n    setShowComments(true);\r\n  };\r\n  const hideCommentClick = () => {\r\n    setShowComments(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.blocks}>\r\n        <div className={styles.block1}>\r\n          <div className={styles.userimg}>\r\n            <img src={userImg} alt=\"img\" />\r\n          </div>\r\n        </div>\r\n        <div className={styles.block2}>\r\n          <div>\r\n            <div>\r\n              <span className={styles.title}>\r\n                {props.post.id}. {props.post.title}\r\n              </span>\r\n              <NavLink to={\"/post/\" + props.post.id}>\r\n                <button className={styles.editBtn}>Edit</button>\r\n              </NavLink>\r\n              <button className={styles.deleteBtn} onClick={props.deletePost}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <p className={styles.body}>\r\n                {props.post.body != null ? props.post.body : \"without text\"}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              {!showComments && (\r\n                <button onClick={showCommentClick}>Show comments</button>\r\n              )}\r\n              {showComments && (\r\n                <button onClick={hideCommentClick}>Hide comments</button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Comments\r\n        postId={props.post.id}\r\n        showComments={showComments}\r\n        setShowComments={setShowComments}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport PostDelete from \"./PostDelete/PostDelete\";\r\nimport style from \"./Posts.module.css\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nlet Posts = (props) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  if (props.isFetching) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const deletePost = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.posts.map((post) => (\r\n        <div className={style.post}>\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n            currentPage={props.currentPage}\r\n            pageSize={props.pageSize}\r\n            deletePost={deletePost}\r\n            isCommentsShowing={props.isCommentsShowing}\r\n            toggleCommentsShowing={props.toggleCommentsShowing}\r\n          />\r\n          <PostDelete\r\n            deletePostThunk={props.deletePostThunk}\r\n            modalIsOpen={modalIsOpen}\r\n            setModalIsOpen={setModalIsOpen}\r\n            postId={post.id}\r\n            currentPage={props.currentPage}\r\n            pageSize={props.pageSize}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n  totalCount,\r\n  pageSize,\r\n  currentPage,\r\n  paginate,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pages}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          prev\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              key={p}\r\n              className={currentPage === p && styles.selectedPage}\r\n              onClick={(e) => {\r\n                paginate(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          next\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport style from \"./PostsForm.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst PostsForm = (props) => {\r\n  return (\r\n    <div className={style.formBlock}>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div className={style.newPostTitle}>\r\n          <Field\r\n            component=\"input\"\r\n            name=\"postTitle\"\r\n            placeholder=\"new post title...\"\r\n          />\r\n        </div>\r\n        <div className={style.newPostBody}>\r\n          <Field\r\n            component=\"textarea\"\r\n            name=\"postBody\"\r\n            placeholder=\"new post body...\"\r\n          />\r\n        </div>\r\n        <div className={style.newPostButton}>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostsReduxForm = reduxForm({ form: \"newPost\" })(PostsForm);\r\nexport default PostsReduxForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport style from \"./Posts.module.css\";\r\nimport {\r\n  setCurrentPage,\r\n  getPostsThunk,\r\n  addPostThunk,\r\n  deletePostThunk,\r\n} from \"./../../redux/reducers/posts-reducer\";\r\nimport { toggleUpdatingProgress } from \"./../../redux/reducers/editPost-reducer\";\r\nimport { toggleCommentsShowing } from \"./../../redux/reducers/comments-reducer\";\r\nimport {\r\n  getPosts,\r\n  getPageSize,\r\n  getTotalPostsCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n} from \"./../../redux/selectors/posts-selectors\";\r\nimport Posts from \"./Posts\";\r\nimport Paginator from \"../common/Paginator\";\r\nimport PostsReduxForm from \"./PostAdd/PostsForm\";\r\n\r\nconst PostsContainer = (props) => {\r\n  debugger;\r\n  useEffect(() => {\r\n    props.getPostsThunk(props.currentPage, props.pageSize);\r\n    props.toggleUpdatingProgress(false);\r\n  }, []);\r\n\r\n  //change page\r\n  const paginate = (pageNumber) => {\r\n    props.getPostsThunk(pageNumber, props.pageSize);\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    props.addPostThunk(\r\n      formData.postTitle,\r\n      formData.postBody,\r\n      props.currentPage,\r\n      props.pageSize\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <Paginator\r\n        paginate={paginate}\r\n        pageSize={props.pageSize}\r\n        totalCount={props.totalCount}\r\n        currentPage={props.currentPage}\r\n      />\r\n      <Posts\r\n        posts={props.posts}\r\n        isFetching={props.isFetching}\r\n        deletePostThunk={props.deletePostThunk}\r\n        currentPage={props.currentPage}\r\n        pageSize={props.pageSize}\r\n        toggleCommentsShowing={props.toggleCommentsShowing}\r\n        isCommentsShowing={props.isCommentsShowing}\r\n      />\r\n      <PostsReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: getPosts(state),\r\n    pageSize: getPageSize(state),\r\n    totalCount: getTotalPostsCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    isCommentsShowing: state.comments.isCommentsShowing,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setCurrentPage,\r\n  getPostsThunk,\r\n  addPostThunk,\r\n  deletePostThunk,\r\n  toggleUpdatingProgress,\r\n  toggleCommentsShowing,\r\n})(PostsContainer);\r\n","import React from \"react\";\r\nimport style from \"./PostEditForm.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst PostEditForm = (props) => {\r\n  return (\r\n    <div className={style.editFormBlock}>\r\n      <h1 className={style.title}>Edit Post</h1>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div className={style.newPostTitle}>\r\n          <Field component=\"input\" name=\"postEditTitle\" />\r\n        </div>\r\n        <div className={style.newPostBody}>\r\n          <Field component=\"textarea\" name=\"postEditBody\" />\r\n        </div>\r\n        <div className={style.newPostButton}>\r\n          <button>Update post</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostEditReduxForm = reduxForm({\r\n  form: \"editPost\",\r\n})(PostEditForm);\r\n\r\nexport default PostEditReduxForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport PostEditReduxForm from \"./PostEditForm\";\r\nimport {\r\n  getEditPost,\r\n  updateEditPost,\r\n  setEditPost,\r\n} from \"../../../redux/reducers/editPost-reducer\";\r\n\r\nconst PostEditContainer = (props) => {\r\n  useEffect(() => {\r\n    let postId = props.match.params.id;\r\n    if (!postId) {\r\n      this.props.history.push(\"/post/\" + props.postId);\r\n    }\r\n    props.getEditPost(postId);\r\n  }, []);\r\n\r\n  if (props.isFetching) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  let changePost = (value) => {\r\n    props.updateEditPost(\r\n      props.postId,\r\n      props.userId,\r\n      value.postEditTitle,\r\n      value.postEditBody\r\n    );\r\n  };\r\n\r\n  if (props.isUpdated) {\r\n    return <Redirect to=\"/posts\" />;\r\n  }\r\n\r\n  return <PostEditReduxForm onSubmit={changePost} {...props} />;\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postId: state.editPost.id,\r\n    userId: state.editPost.userId,\r\n    editTitle: state.editPost.title,\r\n    editBody: state.editPost.body,\r\n    isFetching: state.editPost.isFetching,\r\n    isUpdated: state.editPost.isUpdated,\r\n    initialValues: {\r\n      postEditTitle: state.editPost.title,\r\n      postEditBody: state.editPost.body,\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getEditPost,\r\n    updateEditPost,\r\n    setEditPost,\r\n  }),\r\n  withRouter\r\n)(PostEditContainer);\r\n","import { usersAPI } from './../../api/api';\r\n\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_PAGE = \"SET_PAGE\";\r\nconst SET_TOTAL_USERS = \"SET_TOTAL_USERS\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 3,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:            \r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        \r\n        case SET_PAGE:            \r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            };\r\n\r\n        case SET_TOTAL_USERS:            \r\n            return {    \r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n//action creators\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (pageNumber) => {\r\n    return {\r\n        type: SET_PAGE,\r\n        pageNumber\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (count) => {\r\n    return {\r\n        type: SET_TOTAL_USERS,\r\n        count: 10\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\n//ThunkCreators\r\n\r\nexport const getUsersThunk = (pageNumber) => async(dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(pageNumber));\r\n\r\n    const data = await usersAPI.getUsers();\r\n    dispatch(setUsers(data));\r\n    dispatch(setTotalUsersCount(data[\"x-total-count\"]));\r\n    dispatch(toggleIsFetching(false));\r\n}","\r\nexport const getUsers = (state) => {\r\n  return state.users.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.users.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.users.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.users.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.users.isFetching;\r\n};","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userImg from \"../../assets/images/user.png\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\nlet Users = React.memo((props) => {\r\n  if (props.isFetching) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      {props.users.map((user) => (\r\n        <div key={user.id}>\r\n          <div className={styles.blocks}>\r\n            <div className={styles.block1}>\r\n              <div className={styles.userimg}>\r\n                <img src={userImg} alt=\"img\" />\r\n              </div>\r\n            </div>\r\n            <div className={styles.block2}>\r\n              <div>\r\n                <p className={styles.username}>\r\n                  {user.id}. {user.name}\r\n                </p>\r\n                <p className={styles.email}>\r\n                  {user.email != null ? user.email : \"without email\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Users;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentPage,\r\n  getUsersThunk,\r\n} from \"./../../redux/reducers/users-reducer\";\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n} from \"./../../redux/selectors/users-selectors\";\r\nimport Users from \"./Users\";\r\nimport Paginator from \"./../common/Paginator\";\r\n\r\nconst UsersContainer = (props) => {\r\n  useEffect(() => {\r\n    props.getUsersThunk(props.currentPage);\r\n  }, []);\r\n\r\n  //Get current posts\r\n  let indexOfLastUser = props.currentPage * props.pageSize;\r\n  let indexOfFirstUser = indexOfLastUser - props.pageSize;\r\n  let currentUsers = props.users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  //change page\r\n  const paginate = (pageNumber) => {\r\n    props.getUsersThunk(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        paginate={paginate}\r\n        pageSize={props.pageSize}\r\n        totalCount={props.totalCount}\r\n        currentPage={props.currentPage}\r\n      />\r\n      <Users users={currentUsers} isFetching={props.isFetching} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setCurrentPage,\r\n  getUsersThunk,\r\n})(UsersContainer);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Nav from \"./components/Nav/Nav\";\nimport PostsContainer from \"./components/Posts/PostsContainer\";\nimport PostEditContainer from \"./components/Posts/PostEdit/PostEditContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nconst App = (props) => {\n  return (\n    <div className=\"App-wrapper\">\n      <Header />\n      <Nav />\n      <div className=\"App-content\">\n        <Route path=\"/posts\" render={() => <PostsContainer />} />\n        <Route path=\"/users\" render={() => <UsersContainer />} />\n        <Route path=\"/post/:id?\" render={() => <PostEditContainer />} />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport postsReducer from './reducers/posts-reducer';\r\nimport usersReducer from './reducers/users-reducer';\r\nimport editPostReducer from './reducers/editPost-reducer';\r\nimport commentsReducer from './reducers/comments-reducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n  form: formReducer,\r\n  posts: postsReducer,\r\n  users: usersReducer,\r\n  editPost: editPostReducer,\r\n  comments: commentsReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blocks\":\"Users_blocks__1eKMH\",\"block1\":\"Users_block1__dq-SH\",\"userimg\":\"Users_userimg__kAtzY\",\"block2\":\"Users_block2__3UMb1\",\"followbtn\":\"Users_followbtn__1nCf_\",\"location\":\"Users_location__2-SDi\",\"username\":\"Users_username__1LYIr\",\"status\":\"Users_status__3lJwP\",\"country\":\"Users_country__3boOy\",\"pages\":\"Users_pages__1TTxc\",\"selectedPage\":\"Users_selectedPage__z6iwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blocks\":\"Comments_blocks__1rrbF\",\"block1\":\"Comments_block1__19t0D\",\"userimg\":\"Comments_userimg__25Lgy\",\"block2\":\"Comments_block2__2HzrF\",\"title\":\"Comments_title__2-9ng\",\"editBtn\":\"Comments_editBtn__1pLF2\",\"deleteBtn\":\"Comments_deleteBtn__1qfIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editFormBlock\":\"PostEditForm_editFormBlock__3Eb_4\",\"newPostTitle\":\"PostEditForm_newPostTitle__1Ts-m\",\"newPostBody\":\"PostEditForm_newPostBody__YDTM6\",\"newPostButton\":\"PostEditForm_newPostButton__2MnAH\",\"title\":\"PostEditForm_title__3R0r3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"PostsForm_formBlock__2YeQz\",\"newPostTitle\":\"PostsForm_newPostTitle__2WNR3\",\"newPostBody\":\"PostsForm_newPostBody__12mgN\",\"newPostButton\":\"PostsForm_newPostButton__BeCa3\"};","module.exports = __webpack_public_path__ + \"static/media/user.d00d5149.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__9bdIB\",\"logo\":\"Header_logo__1v1jP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__t6zGf\",\"preloader__img\":\"Preloader_preloader__img__10Woo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__2gWB-\",\"selectedPage\":\"Paginator_selectedPage__1bt24\"};"],"sourceRoot":""}